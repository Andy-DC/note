server:
  port: 80

spring:
  profiles:
    active: error
  application:
    name: demoService

  datasource:
    username: dachao
    password: dachaoZx
    url: jdbc:mysql://192.168.0.205:3306/dachao?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.jdbc.Driver
    initial-size: 1 #配置初始化大小/最大/最小
    min-idle: 1
    max-active: 20 #获取连接等待超时时间
    max-wait: 60000
    time-between-eviction-runs-millis: 60000 #间隔多久进行一侧检测，检测需要的空闲连接
    min-evictable-idle-time-millis: 30000 #一个连接在池中最小生存时间
    validation-query: SELECT 'x' #检查数据库是否断开需要发送sql语句
    test-while-idle: true  #空闲的时候进行检测
    test-on-borrow: false #是否检测池里连接的可用性，做了这个配置会降低性能
    test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    max-pool-prepared-statement-per-connection-size: 20

  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    # 连接超时时间 单位 ms（毫秒）
    timeout: 3000
    pool:
    #低版本springboot使用的是spring.redis.pool高版本使用的是spring.redis.jedis.pool
    jedis:
      pool:
        max-idle: 8 # 连接池中的最大空闲连接，默认值也是8
        min-idle: 0 #连接池中的最小空闲连接，默认值也是0。
        max-active: 8 # 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
        max-wait: -1  # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException



#  # redis
#  redis:
#    host: 127.0.0.1
#    port: 6379
#    timeout: 3
#    # password:
#    pool:
#      minIdle: 1
#      maxIdle: 10
#      maxWait: 3
#      maxActive: 8


mybatis:
  mapperLocations: classpath*:xml/*.xml
  type-aliases-package: com.demo.entity
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



